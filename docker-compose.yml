version: '3.6'

services:

  telegraf:
    image: telegraf:1.18-alpine
    container_name: telegraf
    restart: always
    user: root
    entrypoint: "telegraf"
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mongodb
      - spring-boot-app
      - nginx
    links:
      - influxdb
    ports:
      - '8125:8125'
    labels:
      - "docker.group=telegraf"


  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - ./influx/data:/var/lib/influxdb
    labels:
      - "docker.group=telegraf"

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana-server
    restart: always
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - ./grafana/data:/var/lib/grafana
    labels:
      - "docker.group=telegraf"

  spring-boot-app:
    container_name: spring-boot-app
    build:
      context: spring-boot-app
      dockerfile: Dockerfile
    image: spring-boot-app:latest
    depends_on:
      - mongodb
      - nginx
      - elasticsearch
    ports:
      - '127.0.0.1:8081:8081'
    labels:
      - "docker.group=telegraf"

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongo/data:/data/db
    labels:
      - "docker.group=telegraf"

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    labels:
      - "docker.group=telegraf"

